- Detect and handle cyclic module imports

- Add context to errors that occur in rendering (e.g. missing uniform
  values). This would require the lua file/line to be recorded when nodes
  are created. Assess the performance tradeoff of doing this.

- Make vecs and mats readonly. Actually this makes some things quite
  awkward, such as tweening a vector's components separately.
  In cases where vec updates would be problematic (e.g. with views
  or matrix columns), we could return readonly vecs, which are the
  same as normal vecs, but have a modified metatable.

- Look at integrating luasocket for networking support (what about html
  backend?).

- Change to Lua 5.1. Lua 5.2 uses longjmp for yield, which is very
  slow on Chrome. Maybe keep 5.2 as an option (like luajit).

- Things that could be improved:
    - How to integrate sprite sheet generation
    - Pattern of having model for different kinds of game objects
      isn't very convenient as we end up want to call instances of
      the object the same name as the module. When convention could
      we use to solve this.
    - Action execution order - still worried about this. How to
      easily ensure dependencies between actions are satisfied,
      so that we don't get e.g. some nodes being a frame behind.
